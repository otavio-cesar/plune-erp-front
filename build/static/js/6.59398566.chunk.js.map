{"version":3,"sources":["components/meuAlerta/index.js","util/responsive.js","util/EnumPermissions.js","services/ordem.js","pages/home/index.js","util/constants.js"],"names":["useStyles","makeStyles","theme","root","width","marginTop","spacing","MeuAlerta","open","setOpen","autoHideDuration","severity","message","classes","Alert","props","elevation","variant","handleClose","event","reason","className","onClose","viewPort","window","innerWidth","getOrdens","a","fetch","urlAPI","method","headers","res","json","getOrdensByLineProduction","LinhaProcessoProdutivoIds","HomePage","screenWidth","useState","showAlert","setShowAlert","messageAlert","rows","setRows","loading","setLoading","history","useHistory","columns","field","headerName","JSON","parse","localStorage","getItem","permissao","EnumPermissions","productionLine","map","p","value","data","console","log","row","_rows","o","id","Id","servico","ProdutoId","resolved","situacao","Status","metadata","useEffect","showOrdens","pageSize","onCellClick","el","push","idOrder","stageSituation","started","paused","finished","freeToStart","inspect"],"mappings":"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","file":"static/js/6.59398566.chunk.js","sourcesContent":["import Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport function MeuAlerta({ open, setOpen, autoHideDuration = 4000, severity = \"success\", message }) {\r\n  const classes = useStyles();\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n  \r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={open} autoHideDuration={autoHideDuration} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={severity}>\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n      {/* <Alert severity=\"error\">This is an error message!</Alert>\r\n      <Alert severity=\"warning\">This is a warning message!</Alert>\r\n      <Alert severity=\"info\">This is an information message!</Alert>\r\n      <Alert severity=\"success\">This is a success message!</Alert> */}\r\n    </div>\r\n  );\r\n}","\r\nexport const _cssWidthPercent = 0.8\r\nexport const _cssWidthMin = 800\r\n\r\nexport const viewPort = () => {\r\n    return window.innerWidth < _cssWidthMin\r\n        ? window.innerWidth - 5\r\n        : window.innerWidth * _cssWidthPercent\r\n}","export default {\r\n  Admin: 1,\r\n  Basic: 2,\r\n}","import { urlAPI } from \"../util/constants\"\r\nimport EnumPermissions from \"../util/EnumPermissions\"\r\n\r\nexport async function getOrdens() {\r\n    const res = await fetch(`${urlAPI}ordem`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    })\r\n    return res.json()\r\n}\r\n\r\nexport async function getOrdensByLineProduction(LinhaProcessoProdutivoIds) {\r\n    const res = await fetch(`${urlAPI}ordem/LineProduction`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            LinhaProcessoProdutivoIds\r\n        },\r\n    })\r\n    return res.json()\r\n}","import { Button, Container, TextField } from \"@material-ui/core\";\r\nimport './styles.css';\r\nimport { FaIndustry } from 'react-icons/fa';\r\nimport { useEffect, useState } from \"react\";\r\nimport { getOrdens, getOrdensByLineProduction } from \"../../services/ordem\";\r\nimport { MeuAlerta } from \"../../components/meuAlerta\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { viewPort } from \"../../util/responsive\";\r\nimport Loading from \"../../components/loading\";\r\nimport EnumPermissions from \"../../util/EnumPermissions\";\r\n\r\nexport default function HomePage(props) {\r\n    const screenWidth = viewPort()\r\n    const [username, setUsername] = useState('');\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [messageAlert, setMessageAlert] = useState('');\r\n    const [rows, setRows] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const columns = [\r\n        { field: 'id', headerName: 'OP', width: screenWidth * (0.15) },\r\n        { field: 'servico', headerName: 'Produto', width: screenWidth * (0.6) },\r\n        { field: 'situacao', headerName: 'Situação', width: screenWidth * (0.2) },\r\n        // {\r\n        //     field: 'age',\r\n        //     headerName: 'Age',\r\n        //     type: 'number',\r\n        //     width: 90,\r\n        // },\r\n        // {\r\n        //     field: 'fullName',\r\n        //     headerName: 'Full name',\r\n        //     description: 'This column has a value getter and is not sortable.',\r\n        //     sortable: false,\r\n        //     width: 160,\r\n        //     valueGetter: (params) =>\r\n        //         `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`,\r\n        // },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        showOrdens()\r\n    }, [])\r\n\r\n    async function showOrdens() {\r\n        let data\r\n        const usuario = JSON.parse(localStorage.getItem('user'))\r\n        if (usuario.permissao == EnumPermissions.Basic) {\r\n            const LinhaProcessoProdutivoIds = JSON.parse(localStorage.getItem('user')).productionLine.map(p => p.value)\r\n            setLoading(true)\r\n            data = await getOrdensByLineProduction(LinhaProcessoProdutivoIds);\r\n        } else {\r\n            setLoading(true)\r\n            data = await getOrdens();\r\n        }\r\n        setLoading(false)\r\n\r\n        console.log(data.data.row)\r\n        const _rows = data.data.row.map(o => {\r\n            return {\r\n                id: o.Id.value,\r\n                servico: o.ProdutoId.resolved,\r\n                situacao: o.Status.resolved,\r\n                metadata: { ...o }\r\n            }\r\n        })\r\n        setRows(_rows)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <MeuAlerta open={showAlert} setOpen={setShowAlert} severity=\"error\" message={messageAlert}></MeuAlerta>\r\n            {loading && <Loading ></Loading>}\r\n\r\n            <div className=\"container\" >\r\n                <div className=\"containerTable\">\r\n                    <DataGrid rows={rows} columns={columns} pageSize={10} onCellClick={(el) => history.push('/etapa', { idOrder: el.row.id, situacao: el.row.metadata.Status })} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}","export const urlAPI = 'https://mysterious-forest-14010.herokuapp.com/';\r\n// export const urlAPI = 'http://192.168.0.104:8000/';\r\n\r\nexport const stageSituation = {\r\n    started: { id: 30, value: \"Iniciado\" },\r\n    paused: { id: 60, value: \"Pausado\" },\r\n    finished: { id: 40, value: \"Finalizado\" },\r\n    freeToStart: { id: 20, value: \"Liberado para iniciar\" },\r\n    inspect: { id: 180, value: \"Inspeção\" }\r\n}"],"sourceRoot":""}