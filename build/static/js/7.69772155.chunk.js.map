{"version":3,"sources":["components/meuAlerta/index.js","services/stage.js","services/usuario.js","pages/login/index.js","util/constants.js"],"names":["useStyles","makeStyles","theme","root","width","marginTop","spacing","MeuAlerta","open","setOpen","autoHideDuration","severity","message","classes","Alert","props","elevation","variant","handleClose","event","reason","className","onClose","getStagesByIdOrder","id","a","fetch","urlAPI","method","headers","res","json","patchStageSituation","OrdemId","ProcessoId","ProdutoId","Status","MotivoParadaId","QuantidadeProduzida","IsInspecao","body","JSON","stringify","status","Error","getPossibleStageSituation","login","username","password","LoginPage","useState","setUsername","setPassword","showAlert","setShowAlert","messageAlert","setMessageAlert","loading","setLoading","history","useHistory","e","preventDefault","user","token","localStorage","setItem","console","log","data","row","situations","map","d","Id","value","Description","push","error","Container","maxWidth","size","color","autoComplete","onSubmit","TextField","label","required","onChange","target","toLowerCase","type","Button","stageSituation","started","paused","finished","freeToStart","inspect"],"mappings":"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","file":"static/js/7.69772155.chunk.js","sourcesContent":["import Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport function MeuAlerta({ open, setOpen, autoHideDuration = 4000, severity = \"success\", message }) {\r\n  const classes = useStyles();\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n  \r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={open} autoHideDuration={autoHideDuration} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={severity}>\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n      {/* <Alert severity=\"error\">This is an error message!</Alert>\r\n      <Alert severity=\"warning\">This is a warning message!</Alert>\r\n      <Alert severity=\"info\">This is an information message!</Alert>\r\n      <Alert severity=\"success\">This is a success message!</Alert> */}\r\n    </div>\r\n  );\r\n}","import { urlAPI } from \"../util/constants\"\r\n\r\nexport async function getStagesByIdOrder(id) {\r\n    const res = await fetch(`${urlAPI}stage/order/${id}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    })\r\n    return res.json()\r\n}\r\n\r\nexport async function patchStageSituation(OrdemId, ProcessoId, ProdutoId, Status, MotivoParadaId = null, QuantidadeProduzida = null, IsInspecao = false) {\r\n    const res = await fetch(`${urlAPI}stage/pathStageSituation`, {\r\n        method: \"PATCH\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ OrdemId: OrdemId, ProcessoId: ProcessoId, ProdutoId: ProdutoId, Status: Status, MotivoParadaId: MotivoParadaId, QuantidadeProduzida: QuantidadeProduzida, IsInspecao: IsInspecao })\r\n    })\r\n    if (res.status == 201)\r\n        return res.json()\r\n    else\r\n        throw new Error((await res.json()).message)\r\n}\r\n\r\nexport async function getPossibleStageSituation() {\r\n    const res = await fetch(`${urlAPI}stage/getPossibleStageSituation`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    })\r\n    if (res.status == 200)\r\n        return res.json()\r\n    else\r\n        throw new Error((await res.json()).message)\r\n}","import { urlAPI } from \"../util/constants\"\r\n\r\nexport async function login(username, password) {\r\n    const res = await fetch(`${urlAPI}usuario/login`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ username, password })\r\n    })\r\n    return res\r\n}","import { Button, Container, TextField } from \"@material-ui/core\";\r\nimport './styles.css';\r\nimport { FaIndustry } from 'react-icons/fa';\r\nimport { useState } from \"react\";\r\nimport { login } from \"../../services/usuario\";\r\nimport { MeuAlerta } from \"../../components/meuAlerta\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Loading from '../../components/loading/index';\r\nimport { getPossibleStageSituation } from \"../../services/stage\";\r\n\r\nexport default function LoginPage(props) {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [messageAlert, setMessageAlert] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    async function handleLogin(e) {\r\n        e.preventDefault();\r\n\r\n        setLoading(true)\r\n        let res = await login(username, password)\r\n        setLoading(false)\r\n\r\n        if (res.status == 200) {\r\n            const user = await res.json()\r\n            const token = res.headers['token']\r\n            localStorage.setItem('user', JSON.stringify(user))\r\n            localStorage.setItem('token', token);\r\n\r\n            res = await getPossibleStageSituation()\r\n            console.log(res)\r\n            if (res.data.row) {\r\n                const situations = res.data.row.map(d => {\r\n                    return {\r\n                        id: d.Id.value,\r\n                        value: d.Description.value\r\n                    }\r\n                })\r\n                localStorage.setItem(\"situations\", JSON.stringify(situations))\r\n            }\r\n\r\n            history.push('/');\r\n        } else {\r\n            setShowAlert(true)\r\n            const error = (await res.json()).error\r\n            setMessageAlert(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <MeuAlerta open={showAlert} setOpen={setShowAlert} severity=\"error\" message={messageAlert}></MeuAlerta>\r\n            {loading && <Loading ></Loading>}\r\n\r\n            <Container className=\"containerLogin\" maxWidth=\"sm\">\r\n                <div className=\"logo\">\r\n                    <FaIndustry className=\"logo-img\" size={50} color=\"#3f51b5\" />\r\n                    <span className=\"logo-title\">Controle de Ordens de Produção</span>\r\n                </div>\r\n                <form autoComplete=\"off\" onSubmit={handleLogin} >\r\n                    <TextField className=\"line\" id=\"standard-basic\" label=\"Usuário/Email\" required value={username} onChange={(e) => setUsername(e.target.value.toLowerCase())} />\r\n                    <TextField className=\"line\" id=\"standard-basic\" label=\"Senha\" required type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n                    <div className=\"line-botao\">\r\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                            Entrar\r\n                        </Button>\r\n                        <Button variant=\"outlined\">Esqueci a senha</Button>\r\n                    </div>\r\n                </form>\r\n            </Container>\r\n        </>\r\n    );\r\n}","export const urlAPI = 'https://mysterious-forest-14010.herokuapp.com/';\r\n// export const urlAPI = 'http://192.168.0.104:8000/';\r\n\r\nexport const stageSituation = {\r\n    started: { id: 30, value: \"Iniciado\" },\r\n    paused: { id: 60, value: \"Pausado\" },\r\n    finished: { id: 40, value: \"Finalizado\" },\r\n    freeToStart: { id: 20, value: \"Liberado para iniciar\" },\r\n    inspect: { id: 180, value: \"Inspeção\" }\r\n}"],"sourceRoot":""}