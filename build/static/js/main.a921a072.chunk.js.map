{"version":3,"sources":["components/loading/index.js","components/defaultRoute/defaultRoute.js","config/routes.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","backdrop","zIndex","drawer","Loading","props","classes","className","open","color","DefaultRoute","Component","component","roles","needUserLogged","rest","permit","localStorage","getItem","length","includes","permissao","canPermit","render","context","to","Routes","fallback","invisible","exact","path","lazy","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"yGAAA,wCAIMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,SAAU,CACRC,OAAQF,EAAME,OAAOC,OAAS,OAanBC,IATf,SAAiBC,GACf,IAAMC,EAAUR,IAChB,OACE,cAAC,IAAD,CAAUS,UAAWD,EAAQL,SAAUO,MAAM,EAA7C,SACE,cAAC,IAAD,CAAkBC,MAAM,gB,0KCXf,SAASC,EAAaL,GAAQ,IACtBM,EAAmDN,EAA9DO,UADgC,EAC8BP,EAAxCQ,aADU,MACF,GADE,EACEC,EAA4BT,EAA5BS,eAAmBC,EADrB,YAC8BV,EAD9B,wCAgBxC,IAAMW,EAbN,WAAsB,IAAD,EACjB,OAAKF,OAGDA,IAAkBG,aAAaC,QAAQ,aAGvCL,EAAMM,OAAS,GAAKN,EAAMO,SAAN,UAAeH,aAAaC,QAAQ,eAApC,aAAe,EAA8BG,aAM1DC,GAEf,OACI,cAAC,IAAD,2BACQP,GADR,IAEIQ,OAAQ,SAAClB,EAAOmB,GAAR,OACJR,EACI,cAACL,EAAD,uCAAeN,GAAWmB,GAAaT,IAEnC,cAAC,IAAD,CAAUU,GAAIX,EAAiB,SAAW,U,YCtBlE,SAASY,IACL,OACI,mCACI,cAAC,IAAD,UACI,cAAC,WAAD,CAAUC,SAAU,cAAC,IAAD,CAASC,WAAS,IAAtC,SACI,eAAC,IAAD,WACI,cAAClB,EAAD,CACII,gBAAc,EACde,OAAK,EACLC,KAAK,IACLlB,UAAWmB,gBAAK,kBAAM,gEAE1B,cAACrB,EAAD,CACII,gBAAc,EACde,OAAK,EACLC,KAAK,SACLlB,UAAWmB,gBAAK,kBAAM,gEAE1B,cAACrB,EAAD,CACImB,OAAK,EACLC,KAAK,SACLlB,UAAWmB,gBAAK,kBAAM,yEChBnCC,MARf,WACE,OACE,qBAAKzB,UAAU,MAAf,SACE,cAACmB,EAAD,OCMSO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASnB,OACP,cAAC,IAAMoB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a921a072.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Backdrop, CircularProgress, } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n}));\r\n\r\nfunction Loading(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Backdrop className={classes.backdrop} open={true}>\r\n      <CircularProgress color=\"primary\" />\r\n    </Backdrop>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport default function DefaultRoute(props) {\r\n    const { component: Component, roles = [], needUserLogged, ...rest } = props;\r\n\r\n    function canPermit() {\r\n        if (!needUserLogged) {\r\n            return true;\r\n        }\r\n        if (needUserLogged && localStorage.getItem(\"user\")) {\r\n            return true\r\n        }\r\n        if (roles.length > 0 && roles.includes(localStorage.getItem(\"user\")?.permissao)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const permit = canPermit();\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props, context) =>\r\n                permit ? (\r\n                    <Component {...props} {...context} {...rest} />\r\n                ) : (\r\n                        <Redirect to={needUserLogged ? '/login' : '/'} />\r\n                    )\r\n            }\r\n        />\r\n    );\r\n}","import React, { Suspense, lazy, Component } from \"react\";\r\nimport { BrowserRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport DefaultRoute from \"../components/defaultRoute/defaultRoute\";\r\n// import EnumPermissions from \"../util/EnumPermissions\";\r\nimport Loading from \"../components/loading\";\r\n\r\nfunction Routes() {\r\n    return (\r\n        <>\r\n            <Router>\r\n                <Suspense fallback={<Loading invisible />}>\r\n                    <Switch>\r\n                        <DefaultRoute\r\n                            needUserLogged\r\n                            exact\r\n                            path=\"/\"\r\n                            component={lazy(() => import(\"../pages/home/index\"))}\r\n                        />\r\n                        <DefaultRoute\r\n                            needUserLogged\r\n                            exact\r\n                            path=\"/etapa\"\r\n                            component={lazy(() => import(\"../pages/etapa/index\"))}\r\n                        />\r\n                        <DefaultRoute\r\n                            exact\r\n                            path=\"/login\"\r\n                            component={lazy(() => import(\"../pages/login/index\"))}\r\n                        />\r\n                    </Switch>\r\n                </Suspense>\r\n            </Router>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { Routes };\r\n","import './App.css';\nimport { Routes } from './config/routes';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}